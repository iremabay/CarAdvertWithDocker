name: dockercompose10056610848078842509
services:
  caradverts:
    build:
      context: C:\Users\iabay\source\repos\CarAdverts
      dockerfile: Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: CarAdverts
      target: base
    container_name: CarAdverts
    entrypoint:
      - dotnet
      - --roll-forward
      - Major
      - /VSTools/DistrolessHelper/DistrolessHelper.dll
      - --wait
    environment:
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: caradverts:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages  "/app/bin/Debug/net8.0/CarAdverts.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: dotnet --roll-forward Major /VSTools/DistrolessHelper/DistrolessHelper.dll --stop dotnet
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    tty: true
    volumes:
      - type: bind
        source: C:\Users\iabay\source\repos\CarAdverts\CarAdverts
        target: /app
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\iabay\source\repos\CarAdverts
        target: /src
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\iabay\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\iabay\.nuget\packages
        target: /.nuget/packages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\iabay\AppData\Roaming\ASP.NET\Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\iabay\AppData\Roaming\ASP.NET\Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\iabay\AppData\Roaming\Microsoft\UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\iabay\AppData\Roaming\Microsoft\UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\linux-x64\net8.0
        target: /VSTools
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
  mssql:
    container_name: mssql
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: YourStrong!Passw0rd
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    volumes:
      - type: volume
        source: mssql-data
        target: /var/opt/mssql
        volume: {}
      - type: bind
        source: C:\Users\iabay\source\repos\CarAdverts\CarAdverts\Database\init.sql
        target: /docker-entrypoint-initdb.d/init.sql
        bind:
          create_host_path: true
  webapi:
    build:
      context: C:\Users\iabay\source\repos\CarAdverts
      dockerfile: Dockerfile
    container_name: caradverts-api
    depends_on:
      mssql:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: Server=mssql;Database=CarAdvertsDb;User=sa;Password=YourStrong!Passw0rd;
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "5000"
        protocol: tcp
networks:
  default:
    name: dockercompose10056610848078842509_default
volumes:
  mssql-data:
    name: dockercompose10056610848078842509_mssql-data